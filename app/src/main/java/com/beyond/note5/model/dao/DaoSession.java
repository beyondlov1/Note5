package com.beyond.note5.model.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.beyond.note5.bean.Account;
import com.beyond.note5.bean.Attachment;
import com.beyond.note5.bean.Document;
import com.beyond.note5.bean.Note;
import com.beyond.note5.bean.Reminder;
import com.beyond.note5.bean.Todo;
import com.beyond.note5.sync.context.entity.SyncState;
import com.beyond.note5.sync.model.entity.TraceLog;
import com.beyond.note5.sync.datasource.entity.BaseSyncStamp;

import com.beyond.note5.model.dao.AccountDao;
import com.beyond.note5.model.dao.AttachmentDao;
import com.beyond.note5.model.dao.DocumentDao;
import com.beyond.note5.model.dao.NoteDao;
import com.beyond.note5.model.dao.ReminderDao;
import com.beyond.note5.model.dao.TodoDao;
import com.beyond.note5.model.dao.SyncStateDao;
import com.beyond.note5.model.dao.TraceLogDao;
import com.beyond.note5.model.dao.BaseSyncStampDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountDaoConfig;
    private final DaoConfig attachmentDaoConfig;
    private final DaoConfig documentDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig reminderDaoConfig;
    private final DaoConfig todoDaoConfig;
    private final DaoConfig syncStateDaoConfig;
    private final DaoConfig traceLogDaoConfig;
    private final DaoConfig baseSyncStampDaoConfig;

    private final AccountDao accountDao;
    private final AttachmentDao attachmentDao;
    private final DocumentDao documentDao;
    private final NoteDao noteDao;
    private final ReminderDao reminderDao;
    private final TodoDao todoDao;
    private final SyncStateDao syncStateDao;
    private final TraceLogDao traceLogDao;
    private final BaseSyncStampDao baseSyncStampDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountDaoConfig = daoConfigMap.get(AccountDao.class).clone();
        accountDaoConfig.initIdentityScope(type);

        attachmentDaoConfig = daoConfigMap.get(AttachmentDao.class).clone();
        attachmentDaoConfig.initIdentityScope(type);

        documentDaoConfig = daoConfigMap.get(DocumentDao.class).clone();
        documentDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        reminderDaoConfig = daoConfigMap.get(ReminderDao.class).clone();
        reminderDaoConfig.initIdentityScope(type);

        todoDaoConfig = daoConfigMap.get(TodoDao.class).clone();
        todoDaoConfig.initIdentityScope(type);

        syncStateDaoConfig = daoConfigMap.get(SyncStateDao.class).clone();
        syncStateDaoConfig.initIdentityScope(type);

        traceLogDaoConfig = daoConfigMap.get(TraceLogDao.class).clone();
        traceLogDaoConfig.initIdentityScope(type);

        baseSyncStampDaoConfig = daoConfigMap.get(BaseSyncStampDao.class).clone();
        baseSyncStampDaoConfig.initIdentityScope(type);

        accountDao = new AccountDao(accountDaoConfig, this);
        attachmentDao = new AttachmentDao(attachmentDaoConfig, this);
        documentDao = new DocumentDao(documentDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        reminderDao = new ReminderDao(reminderDaoConfig, this);
        todoDao = new TodoDao(todoDaoConfig, this);
        syncStateDao = new SyncStateDao(syncStateDaoConfig, this);
        traceLogDao = new TraceLogDao(traceLogDaoConfig, this);
        baseSyncStampDao = new BaseSyncStampDao(baseSyncStampDaoConfig, this);

        registerDao(Account.class, accountDao);
        registerDao(Attachment.class, attachmentDao);
        registerDao(Document.class, documentDao);
        registerDao(Note.class, noteDao);
        registerDao(Reminder.class, reminderDao);
        registerDao(Todo.class, todoDao);
        registerDao(SyncState.class, syncStateDao);
        registerDao(TraceLog.class, traceLogDao);
        registerDao(BaseSyncStamp.class, baseSyncStampDao);
    }
    
    public void clear() {
        accountDaoConfig.clearIdentityScope();
        attachmentDaoConfig.clearIdentityScope();
        documentDaoConfig.clearIdentityScope();
        noteDaoConfig.clearIdentityScope();
        reminderDaoConfig.clearIdentityScope();
        todoDaoConfig.clearIdentityScope();
        syncStateDaoConfig.clearIdentityScope();
        traceLogDaoConfig.clearIdentityScope();
        baseSyncStampDaoConfig.clearIdentityScope();
    }

    public AccountDao getAccountDao() {
        return accountDao;
    }

    public AttachmentDao getAttachmentDao() {
        return attachmentDao;
    }

    public DocumentDao getDocumentDao() {
        return documentDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public ReminderDao getReminderDao() {
        return reminderDao;
    }

    public TodoDao getTodoDao() {
        return todoDao;
    }

    public SyncStateDao getSyncStateDao() {
        return syncStateDao;
    }

    public TraceLogDao getTraceLogDao() {
        return traceLogDao;
    }

    public BaseSyncStampDao getBaseSyncStampDao() {
        return baseSyncStampDao;
    }

}
